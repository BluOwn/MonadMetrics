{
  "version": 3,
  "sources": ["../../../app/routes/transactions.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\transactions.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\transactions.tsx\");\n  import.meta.hot.lastModified = \"1746543965159.9758\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\nimport { getRecentTransactions } from \"~/lib/monad.server\";\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useFarcaster } from \"~/hooks/useFarcaster\";\nexport const loader = async () => {\n  try {\n    const transactions = await getRecentTransactions(50);\n    return json({\n      transactions\n    });\n  } catch (error) {\n    console.error(\"Error loading transactions:\", error);\n    throw new Response(\"Error loading transactions\", {\n      status: 500\n    });\n  }\n};\nexport default function Transactions() {\n  _s();\n  const {\n    transactions\n  } = useLoaderData();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Use the Farcaster hook\n  useFarcaster();\n\n  // Format the value for better display\n  const formatEther = wei => {\n    try {\n      return parseFloat(ethers.formatEther(wei)).toFixed(6);\n    } catch {\n      return \"0\";\n    }\n  };\n  const filteredTransactions = transactions.filter(tx => tx.hash.includes(searchTerm) || tx.from.includes(searchTerm) || tx.to && tx.to.includes(searchTerm));\n  return <div className=\"min-h-screen bg-gray-100 p-6\">\r\n      <div className=\"mb-6\">\r\n        <Link to=\"/\" className=\"text-blue-500 hover:text-blue-700\">\r\n          \u2190 Back to Dashboard\r\n        </Link>\r\n        <h1 className=\"text-3xl font-bold text-gray-800 mt-2\">Recent Transactions</h1>\r\n      </div>\r\n      \r\n      <div className=\"mb-4\">\r\n        <input type=\"text\" placeholder=\"Search by tx hash, from, or to address...\" className=\"w-full p-2 border rounded-md\" value={searchTerm} onChange={e => setSearchTerm(e.target.value)} />\r\n      </div>\r\n      \r\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n        <table className=\"min-w-full divide-y divide-gray-200\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tx Hash</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Block</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">From</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">To</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Value</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Timestamp</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {filteredTransactions.map(tx => <tr key={tx.hash} className=\"hover:bg-gray-50\">\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-500\">\r\n                  <Link to={`/transactions/${tx.hash}`}>\r\n                    {tx.hash.substring(0, 10)}...\r\n                  </Link>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  <a href={`https://testnet.monadexplorer.com/block/${tx.blockNumber}`} target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-500 hover:underline\">\r\n                    {tx.blockNumber}\r\n                  </a>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  <a href={`https://testnet.monadexplorer.com/address/${tx.from}`} target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-500 hover:underline\">\r\n                    {tx.from.substring(0, 8)}...{tx.from.substring(tx.from.length - 6)}\r\n                  </a>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {tx.to ? <a href={`https://testnet.monadexplorer.com/address/${tx.to}`} target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-500 hover:underline\">\r\n                      {tx.to.substring(0, 8)}...{tx.to.substring(tx.to.length - 6)}\r\n                    </a> : <span>Contract Creation</span>}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {formatEther(tx.value)} MON\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {new Date(tx.timestamp * 1000).toLocaleString()}\r\n                </td>\r\n              </tr>)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>;\n}\n_s(Transactions, \"Hf3PqMuxO3S45UVgeiykEn9k2YM=\", false, function () {\n  return [useLoaderData, useFarcaster];\n});\n_c = Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
