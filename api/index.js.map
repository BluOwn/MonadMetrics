{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/transactions.tsx", "../app/lib/monad.server.ts", "../app/routes/compare.tsx", "../app/components/ComparisonChart.tsx", "../app/routes/blocks.tsx", "../app/routes/_index.tsx", "../app/lib/metrics.server.ts", "../app/components/Dashboard.tsx", "../app/components/MetricCard.tsx", "../app/components/TransactionChart.tsx", "../app/components/BlockTimeChart.tsx", "../app/components/NetworkStatus.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "/**\r\n * By default, Remix will handle generating the HTTP Response for you.\r\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\r\n * For more information, see https://remix.run/file-conventions/entry.server\r\n */\r\n\r\nimport { PassThrough } from \"node:stream\";\r\n\r\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\r\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport { isbot } from \"isbot\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\n\r\nconst ABORT_DELAY = 5_000;\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext,\r\n  // This is ignored so we can keep it in the template for visibility.  Feel\r\n  // free to delete this parameter in your app if you're not using it!\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  loadContext: AppLoadContext\r\n) {\r\n  return isbot(request.headers.get(\"user-agent\") || \"\")\r\n    ? handleBotRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      )\r\n    : handleBrowserRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      );\r\n}\r\n\r\nfunction handleBotRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onAllReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n\r\nfunction handleBrowserRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onShellReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n", "import { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration } from \"@remix-run/react\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport styles from \"./tailwind.css\";\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: styles }];\n\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n        <Meta />\r\n        <Links />\r\n        <title>Monad Testnet Metrics</title>\r\n        <meta name=\"description\" content=\"Real-time analytics dashboard for Monad Testnet\" />\r\n        <meta name=\"fc:frame\" content='{\"version\":\"next\",\"imageUrl\":\"https://monaddashboard.vercel.app/og-image.png\",\"button\":{\"title\":\"Open Dashboard\",\"action\":{\"type\":\"launch_frame\",\"name\":\"Monad Metrics\",\"url\":\"https://monaddashboard.vercel.app\",\"splashImageUrl\":\"https://monaddashboard.vercel.app/logo.png\",\"splashBackgroundColor\":\"#0c111f\"}}}' />\r\n      </head>\r\n      <body>\r\n        <Outlet />\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        <LiveReload />\r\n      </body>\r\n    </html>);\n\n}", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData, Link } from \"@remix-run/react\";\r\nimport { getRecentTransactions } from \"~/lib/monad.server\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\n\r\ninterface Transaction {\r\n  hash: string;\r\n  blockNumber: number;\r\n  from: string;\r\n  to: string | null;\r\n  value: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport const loader = async () => {\r\n  try {\r\n    const transactions = await getRecentTransactions(50);\r\n    return json({ transactions });\r\n  } catch (error) {\r\n    console.error(\"Error loading transactions:\", error);\r\n    throw new Response(\"Error loading transactions\", { status: 500 });\r\n  }\r\n};\r\n\r\nexport default function Transactions() {\r\n  const { transactions } = useLoaderData<typeof loader>();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  \r\n  useEffect(() => {\r\n    try {\r\n      const sdk = require('@farcaster/frame-sdk');\r\n      sdk.actions.ready();\r\n    } catch (error) {\r\n      console.log('Farcaster SDK not available');\r\n    }\r\n  }, []);\r\n  \r\n  // Format the value for better display\r\n  const formatEther = (wei: string) => {\r\n    try {\r\n      return parseFloat(ethers.formatEther(wei)).toFixed(6);\r\n    } catch {\r\n      return \"0\";\r\n    }\r\n  };\r\n  \r\n  const filteredTransactions = transactions.filter((tx: Transaction) => \r\n    tx.hash.includes(searchTerm) || \r\n    tx.from.includes(searchTerm) || \r\n    (tx.to && tx.to.includes(searchTerm))\r\n  );\r\n  \r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-6\">\r\n      <div className=\"mb-6\">\r\n        <Link to=\"/\" className=\"text-blue-500 hover:text-blue-700\">\r\n          \u2190 Back to Dashboard\r\n        </Link>\r\n        <h1 className=\"text-3xl font-bold text-gray-800 mt-2\">Recent Transactions</h1>\r\n      </div>\r\n      \r\n      <div className=\"mb-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by tx hash, from, or to address...\"\r\n          className=\"w-full p-2 border rounded-md\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n        <table className=\"min-w-full divide-y divide-gray-200\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tx Hash</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Block</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">From</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">To</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Value</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Timestamp</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {filteredTransactions.map((tx) => (\r\n              <tr key={tx.hash} className=\"hover:bg-gray-50\">\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-500\">\r\n                  <a \r\n                    href={`https://testnet.monadexplorer.com/tx/${tx.hash}`} \r\n                    target=\"_blank\" \r\n                    rel=\"noreferrer\"\r\n                    className=\"hover:underline\"\r\n                  >\r\n                    {tx.hash.substring(0, 10)}...\r\n                  </a>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  <a \r\n                    href={`https://testnet.monadexplorer.com/block/${tx.blockNumber}`} \r\n                    target=\"_blank\" \r\n                    rel=\"noreferrer\"\r\n                    className=\"text-blue-500 hover:underline\"\r\n                  >\r\n                    {tx.blockNumber}\r\n                  </a>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  <a \r\n                    href={`https://testnet.monadexplorer.com/address/${tx.from}`} \r\n                    target=\"_blank\" \r\n                    rel=\"noreferrer\"\r\n                    className=\"text-blue-500 hover:underline\"\r\n                  >\r\n                    {tx.from.substring(0, 8)}...{tx.from.substring(tx.from.length - 6)}\r\n                  </a>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {tx.to ? (\r\n                    <a \r\n                      href={`https://testnet.monadexplorer.com/address/${tx.to}`} \r\n                      target=\"_blank\" \r\n                      rel=\"noreferrer\"\r\n                      className=\"text-blue-500 hover:underline\"\r\n                    >\r\n                      {tx.to.substring(0, 8)}...{tx.to.substring(tx.to.length - 6)}\r\n                    </a>\r\n                  ) : (\r\n                    <span>Contract Creation</span>\r\n                  )}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {formatEther(tx.value)} MON\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {new Date(tx.timestamp * 1000).toLocaleString()}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}", "import { ethers } from \"ethers\";\r\n\r\n// Type definitions\r\ninterface NetworkStats {\r\n  latestBlock: number;\r\n  avgBlockTime: number;\r\n  tps: number;\r\n  pendingTxCount: number;\r\n  gasPrice: string;\r\n  nodesCount: number;\r\n}\r\n\r\ninterface Block {\r\n  number: number;\r\n  hash: string;\r\n  timestamp: number;\r\n  transactions: string[];\r\n  gasUsed: string;\r\n  gasLimit: string;\r\n  difficulty: string;\r\n  totalDifficulty: string;\r\n  size: string;\r\n  miner: string;\r\n}\r\n\r\ninterface Transaction {\r\n  hash: string;\r\n  from: string;\r\n  to: string;\r\n  value: string;\r\n  gas: string;\r\n  gasPrice: string;\r\n  nonce: number;\r\n  blockHash: string;\r\n  blockNumber: number;\r\n  timestamp: number;\r\n}\r\n\r\ninterface ChainComparison {\r\n  name: string;\r\n  tps: number;\r\n  blockTime: number;\r\n  finality: number;\r\n}\r\n\r\n// Initialize the Monad testnet provider\r\nconst MONAD_RPC_URL = \"https://testnet-rpc.monad.xyz\";\r\nconst provider = new ethers.JsonRpcProvider(MONAD_RPC_URL);\r\n\r\n// Cache for storing metrics data to reduce API calls\r\nlet metricsCache = {\r\n  lastUpdated: 0,\r\n  networkStats: null as NetworkStats | null,\r\n  recentBlocks: [] as Block[],\r\n  recentTransactions: [] as Transaction[],\r\n};\r\n\r\n// Time in ms before the cache is considered stale\r\nconst CACHE_TTL = 30000; // 30 seconds\r\n\r\n// Rate limiting\r\nconst RATE_LIMIT = {\r\n  maxRequests: 15, // Reduced from 20 to stay well under the 25/second limit\r\n  timeWindow: 1000, // 1 second\r\n  requests: [] as number[],\r\n  retryDelay: 200 // Increased from 100ms to 200ms\r\n};\r\n\r\nasync function checkRateLimit() {\r\n  const now = Date.now();\r\n  RATE_LIMIT.requests = RATE_LIMIT.requests.filter(time => now - time < RATE_LIMIT.timeWindow);\r\n  \r\n  if (RATE_LIMIT.requests.length >= RATE_LIMIT.maxRequests) {\r\n    const oldestRequest = RATE_LIMIT.requests[0];\r\n    const waitTime = RATE_LIMIT.timeWindow - (now - oldestRequest);\r\n    if (waitTime > 0) {\r\n      await new Promise(resolve => setTimeout(resolve, waitTime));\r\n    }\r\n  }\r\n  \r\n  RATE_LIMIT.requests.push(now);\r\n}\r\n\r\nasync function retryWithBackoff<T>(\r\n  operation: () => Promise<T>,\r\n  maxRetries: number = 3\r\n): Promise<T> {\r\n  let lastError: any;\r\n  \r\n  for (let i = 0; i < maxRetries; i++) {\r\n    try {\r\n      await checkRateLimit();\r\n      return await operation();\r\n    } catch (error: any) {\r\n      lastError = error;\r\n      \r\n      // Check if it's a rate limit error\r\n      if (error?.error?.code === -32007 || error?.error?.message?.includes('request limit reached')) {\r\n        const delay = RATE_LIMIT.retryDelay * Math.pow(2, i); // Exponential backoff\r\n        console.log(`Rate limit hit, retrying in ${delay}ms...`);\r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n        continue;\r\n      }\r\n      \r\n      // For other errors, throw immediately\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  throw lastError;\r\n}\r\n\r\nexport async function getNetworkStats(): Promise<NetworkStats> {\r\n  const now = Date.now();\r\n  if (metricsCache.networkStats && now - metricsCache.lastUpdated < CACHE_TTL) {\r\n    return metricsCache.networkStats;\r\n  }\r\n\r\n  try {\r\n    // Get latest block with retry\r\n    const latestBlock = await retryWithBackoff(() => provider.getBlockNumber());\r\n    \r\n    // Get recent blocks to calculate average block time\r\n    const blocks = await getRecentBlocks(5); // Reduced from 10 to 5 blocks\r\n    let avgBlockTime = 0;\r\n    \r\n    if (blocks.length > 1) {\r\n      let totalTime = 0;\r\n      for (let i = 1; i < blocks.length; i++) {\r\n        totalTime += blocks[i-1].timestamp - blocks[i].timestamp;\r\n      }\r\n      avgBlockTime = totalTime / (blocks.length - 1);\r\n    }\r\n    \r\n    // Calculate TPS based on recent blocks\r\n    let totalTxs = 0;\r\n    blocks.forEach(block => {\r\n      totalTxs += block.transactions.length;\r\n    });\r\n    const tps = totalTxs / (blocks.length * avgBlockTime);\r\n    \r\n    // Get gas price with retry\r\n    const gasPrice = await retryWithBackoff(async () => {\r\n      const feeData = await provider.getFeeData();\r\n      return feeData.gasPrice?.toString() || \"0\";\r\n    });\r\n    \r\n    // Nodes count (this is a mock as there's no direct way to get this)\r\n    const nodesCount = 50; // Mock value\r\n    \r\n    const stats: NetworkStats = {\r\n      latestBlock,\r\n      avgBlockTime,\r\n      tps,\r\n      pendingTxCount: 0, // Removed pending transactions as it's not supported\r\n      gasPrice,\r\n      nodesCount\r\n    };\r\n    \r\n    // Update cache\r\n    metricsCache.networkStats = stats;\r\n    metricsCache.lastUpdated = now;\r\n    \r\n    return stats;\r\n  } catch (error) {\r\n    console.error(\"Error fetching network stats:\", error);\r\n    // Return cached data if available, otherwise throw\r\n    if (metricsCache.networkStats) {\r\n      return metricsCache.networkStats;\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getRecentBlocks(count: number = 5): Promise<Block[]> { // Reduced default from 10 to 5\r\n  const now = Date.now();\r\n  if (metricsCache.recentBlocks.length >= count && now - metricsCache.lastUpdated < CACHE_TTL) {\r\n    return metricsCache.recentBlocks.slice(0, count);\r\n  }\r\n\r\n  try {\r\n    const latestBlock = await retryWithBackoff(() => provider.getBlockNumber());\r\n    const blocks: Block[] = [];\r\n    \r\n    for (let i = 0; i < count; i++) {\r\n      const blockNumber = latestBlock - i;\r\n      if (blockNumber < 0) break;\r\n      \r\n      const block = await retryWithBackoff(() => provider.getBlock(blockNumber));\r\n      if (!block) continue;\r\n      \r\n      blocks.push({\r\n        number: Number(block.number),\r\n        hash: block.hash || \"\",\r\n        timestamp: Number(block.timestamp),\r\n        transactions: [...(block.transactions || [])],\r\n        gasUsed: block.gasUsed?.toString() || \"0\",\r\n        gasLimit: block.gasLimit?.toString() || \"0\",\r\n        difficulty: \"0\", // Not applicable for PoS chains\r\n        totalDifficulty: \"0\", // Not applicable for PoS chains\r\n        size: \"0\", // Need to calculate from raw data\r\n        miner: block.miner || \"\"\r\n      });\r\n    }\r\n    \r\n    // Update cache\r\n    metricsCache.recentBlocks = blocks;\r\n    metricsCache.lastUpdated = now;\r\n    \r\n    return blocks;\r\n  } catch (error) {\r\n    console.error(\"Error fetching recent blocks:\", error);\r\n    // Return cached data if available, otherwise throw\r\n    if (metricsCache.recentBlocks.length > 0) {\r\n      return metricsCache.recentBlocks.slice(0, count);\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getRecentTransactions(count: number = 20): Promise<Transaction[]> {\r\n  const now = Date.now();\r\n  if (metricsCache.recentTransactions.length >= count && now - metricsCache.lastUpdated < CACHE_TTL) {\r\n    return metricsCache.recentTransactions.slice(0, count);\r\n  }\r\n\r\n  try {\r\n    const blocks = await getRecentBlocks(5);\r\n    const transactions: Transaction[] = [];\r\n    \r\n    for (const block of blocks) {\r\n      for (const txHash of block.transactions.slice(0, Math.ceil(count / blocks.length))) {\r\n        const tx = await retryWithBackoff(() => provider.getTransaction(txHash));\r\n        if (!tx) continue;\r\n        \r\n        transactions.push({\r\n          hash: tx.hash,\r\n          from: tx.from,\r\n          to: tx.to || \"\",\r\n          value: tx.value.toString(),\r\n          gas: tx.gasLimit.toString(),\r\n          gasPrice: tx.gasPrice?.toString() || \"0\",\r\n          nonce: tx.nonce,\r\n          blockHash: tx.blockHash || \"\",\r\n          blockNumber: Number(tx.blockNumber),\r\n          timestamp: block.timestamp\r\n        });\r\n        \r\n        if (transactions.length >= count) break;\r\n      }\r\n      if (transactions.length >= count) break;\r\n    }\r\n    \r\n    // Update cache\r\n    metricsCache.recentTransactions = transactions;\r\n    metricsCache.lastUpdated = now;\r\n    \r\n    return transactions;\r\n  } catch (error) {\r\n    console.error(\"Error fetching recent transactions:\", error);\r\n    // Return cached data if available, otherwise throw\r\n    if (metricsCache.recentTransactions.length > 0) {\r\n      return metricsCache.recentTransactions.slice(0, count);\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getChainComparisons(): Promise<ChainComparison[]> {\r\n  // This would normally come from an API or database\r\n  // Using static data for demonstration\r\n  return [\r\n    { name: \"Monad Testnet\", tps: 10000, blockTime: 1, finality: 1 },\r\n    { name: \"Ethereum\", tps: 15, blockTime: 12, finality: 12 },\r\n    { name: \"Solana\", tps: 4000, blockTime: 0.4, finality: 32 },\r\n    { name: \"Arbitrum\", tps: 50, blockTime: 0.25, finality: 0.25 },\r\n    { name: \"Optimism\", tps: 35, blockTime: 2, finality: 10 }\r\n  ];\r\n}\r\n", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData, Link } from \"@remix-run/react\";\r\nimport { getChainComparisons } from \"~/lib/monad.server\";\r\nimport { ComparisonChart } from \"~/components/ComparisonChart\";\r\nimport { useEffect } from \"react\";\r\n\r\ninterface ChainComparison {\r\n  name: string;\r\n  tps: number;\r\n  blockTime: number;\r\n  finality: number;\r\n}\r\n\r\nexport const loader = async () => {\r\n  try {\r\n    const chainComparisons = await getChainComparisons();\r\n    return json({ chainComparisons });\r\n  } catch (error) {\r\n    console.error(\"Error loading chain comparisons:\", error);\r\n    throw new Response(\"Error loading chain comparisons\", { status: 500 });\r\n  }\r\n};\r\n\r\nexport default function Compare() {\r\n  const { chainComparisons } = useLoaderData<typeof loader>();\r\n  \r\n  useEffect(() => {\r\n    try {\r\n      const sdk = require('@farcaster/frame-sdk');\r\n      sdk.actions.ready();\r\n    } catch (error) {\r\n      console.log('Farcaster SDK not available');\r\n    }\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-6\">\r\n      <div className=\"mb-6\">\r\n        <Link to=\"/\" className=\"text-blue-500 hover:text-blue-700\">\r\n          \u2190 Back to Dashboard\r\n        </Link>\r\n        <h1 className=\"text-3xl font-bold text-gray-800 mt-2\">Chain Comparisons</h1>\r\n        <p className=\"text-gray-600\">Compare Monad Testnet with other blockchain networks</p>\r\n      </div>\r\n      \r\n      <div className=\"grid grid-cols-1 gap-8\">\r\n        <ComparisonChart \r\n          data={chainComparisons} \r\n          metric=\"tps\" \r\n          title=\"Transactions Per Second (TPS)\" \r\n          color=\"#8884d8\" \r\n        />\r\n        \r\n        <ComparisonChart \r\n          data={chainComparisons} \r\n          metric=\"blockTime\" \r\n          title=\"Block Time (seconds)\" \r\n          color=\"#82ca9d\" \r\n        />\r\n        \r\n        <ComparisonChart \r\n          data={chainComparisons} \r\n          metric=\"finality\" \r\n          title=\"Finality Time (seconds)\" \r\n          color=\"#ffc658\" \r\n        />\r\n        \r\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Performance Comparison</h2>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Chain</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">TPS</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Block Time (s)</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Finality (s)</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {chainComparisons.map((chain) => (\r\n                  <tr key={chain.name} className={chain.name === \"Monad Testnet\" ? \"bg-blue-50\" : \"hover:bg-gray-50\"}>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                      {chain.name === \"Monad Testnet\" ? <strong>{chain.name}</strong> : chain.name}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                      {chain.tps.toLocaleString()}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                      {chain.blockTime}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                      {chain.finality}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\r\nimport type { ChainComparison } from \"../lib/types\";\r\n\r\ninterface ComparisonChartProps {\r\n  data: ChainComparison[];\r\n  metric: \"tps\" | \"blockTime\" | \"finality\";\r\n  title: string;\r\n  color: string;\r\n}\r\n\r\nexport function ComparisonChart({ data, metric, title, color }: ComparisonChartProps) {\r\n  const formatYAxis = (value: number) => {\r\n    if (metric === \"tps\" && value >= 1000) {\r\n      return `${(value / 1000).toFixed(1)}k`;\r\n    }\r\n    return value;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n      <h2 className=\"text-lg font-semibold mb-4\">{title}</h2>\r\n      <div className=\"h-72\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <BarChart\r\n            data={data}\r\n            margin={{ top: 10, right: 30, left: 20, bottom: 40 }}\r\n            layout=\"vertical\"\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis type=\"number\" />\r\n            <YAxis \r\n              type=\"category\" \r\n              dataKey=\"name\"\r\n              width={100}\r\n            />\r\n            <Tooltip \r\n              formatter={(value) => {\r\n                if (metric === \"tps\") {\r\n                  return [`${value.toLocaleString()} TPS`, \"Transactions Per Second\"];\r\n                } else if (metric === \"blockTime\") {\r\n                  return [`${value} seconds`, \"Block Time\"];\r\n                } else {\r\n                  return [`${value} seconds`, \"Finality Time\"];\r\n                }\r\n              }}\r\n            />\r\n            <Legend />\r\n            <Bar \r\n              dataKey={metric} \r\n              fill={color} \r\n              name={\r\n                metric === \"tps\" \r\n                  ? \"Transactions Per Second\" \r\n                  : metric === \"blockTime\" \r\n                    ? \"Block Time (s)\" \r\n                    : \"Finality Time (s)\"\r\n              } \r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData, Link } from \"@remix-run/react\";\r\nimport { getRecentBlocks } from \"~/lib/monad.server\";\r\nimport { useEffect } from \"react\";\r\nimport { ethers } from \"ethers\";\r\n\r\ninterface Block {\r\n  number: number;\r\n  hash: string;\r\n  timestamp: number;\r\n  transactions: string[];\r\n  gasUsed: string;\r\n  gasLimit: string;\r\n}\r\n\r\nexport const loader = async () => {\r\n  try {\r\n    const blocks = await getRecentBlocks(50);\r\n    return json({ blocks });\r\n  } catch (error) {\r\n    console.error(\"Error loading blocks:\", error);\r\n    throw new Response(\"Error loading blocks\", { status: 500 });\r\n  }\r\n};\r\n\r\nexport default function Blocks() {\r\n  const { blocks } = useLoaderData<typeof loader>();\r\n  \r\n  useEffect(() => {\r\n    try {\r\n      const sdk = require('@farcaster/frame-sdk');\r\n      sdk.actions.ready();\r\n    } catch (error) {\r\n      console.log('Farcaster SDK not available');\r\n    }\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-6\">\r\n      <div className=\"mb-6\">\r\n        <Link to=\"/\" className=\"text-blue-500 hover:text-blue-700\">\r\n          \u2190 Back to Dashboard\r\n        </Link>\r\n        <h1 className=\"text-3xl font-bold text-gray-800 mt-2\">Recent Blocks</h1>\r\n      </div>\r\n      \r\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n        <table className=\"min-w-full divide-y divide-gray-200\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Block</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Hash</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Timestamp</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Txs</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Gas Used</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Gas Limit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {blocks.map((block) => (\r\n              <tr key={block.hash} className=\"hover:bg-gray-50\">\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-500\">\r\n                  <a \r\n                    href={`https://testnet.monadexplorer.com/block/${block.number}`} \r\n                    target=\"_blank\" \r\n                    rel=\"noreferrer\"\r\n                    className=\"hover:underline\"\r\n                  >\r\n                    {block.number}\r\n                  </a>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {block.hash.substring(0, 10)}...{block.hash.substring(block.hash.length - 8)}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {new Date(block.timestamp * 1000).toLocaleString()}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {block.transactions.length}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {ethers.formatUnits(block.gasUsed, \"gwei\")} Gwei\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {ethers.formatUnits(block.gasLimit, \"gwei\")} Gwei\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { getDashboardData } from \"~/lib/metrics.server\";\r\nimport { Dashboard } from \"~/components/Dashboard\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const loader = async () => {\r\n  try {\r\n    const dashboardData = await getDashboardData();\r\n    return json(dashboardData);\r\n  } catch (error) {\r\n    console.error(\"Error loading dashboard data:\", error);\r\n    throw new Response(\"Error loading dashboard data\", { status: 500 });\r\n  }\r\n};\r\n\r\nexport default function Index() {\r\n  const dashboardData = useLoaderData<typeof loader>();\r\n  \r\n  // Integrate with Farcaster Mini Apps SDK if available\r\n  useEffect(() => {\r\n    try {\r\n      const sdk = require('@farcaster/frame-sdk');\r\n      // Tell the Farcaster client that our app is ready to be displayed\r\n      sdk.actions.ready();\r\n      \r\n      // We could also add event listeners for SDK events\r\n      sdk.on('primaryButtonClicked', () => {\r\n        // Handle primary button click\r\n        console.log('Primary button clicked');\r\n      });\r\n      \r\n      return () => {\r\n        // Clean up event listeners when component unmounts\r\n        sdk.removeAllListeners();\r\n      };\r\n    } catch (error) {\r\n      console.log('Farcaster SDK not available');\r\n    }\r\n  }, []);\r\n  \r\n  return <Dashboard {...dashboardData} />;\r\n}", "import { getNetworkStats, getRecentBlocks, getRecentTransactions, getChainComparisons } from \"./monad.server\";\r\nimport type { Block, Transaction, NetworkStats, ChainComparison } from \"./types\";\r\n\r\nexport async function getDashboardData() {\r\n  try {\r\n    const [networkStats, recentBlocks, recentTransactions, chainComparisons] = await Promise.all([\r\n      getNetworkStats(),\r\n      getRecentBlocks(10),\r\n      getRecentTransactions(20),\r\n      getChainComparisons()\r\n    ]);\r\n    \r\n    // Calculate block time trend data\r\n    const blockTimeTrend = calculateBlockTimeTrend(recentBlocks);\r\n    \r\n    // Calculate transaction trend data\r\n    const txTrend = calculateTransactionTrend(recentBlocks);\r\n    \r\n    return {\r\n      networkStats,\r\n      recentBlocks,\r\n      recentTransactions,\r\n      chainComparisons,\r\n      blockTimeTrend,\r\n      txTrend\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error fetching dashboard data:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nfunction calculateBlockTimeTrend(blocks: Block[]) {\r\n  if (blocks.length <= 1) return [];\r\n  \r\n  const trend = [];\r\n  for (let i = 1; i < blocks.length; i++) {\r\n    const blockTime = blocks[i-1].timestamp - blocks[i].timestamp;\r\n    trend.push({\r\n      blockNumber: blocks[i].number,\r\n      blockTime\r\n    });\r\n  }\r\n  \r\n  return trend.reverse(); // Oldest to newest\r\n}\r\n\r\nfunction calculateTransactionTrend(blocks: Block[]) {\r\n  return blocks.map(block => ({\r\n    blockNumber: block.number,\r\n    transactionCount: block.transactions.length\r\n  })).reverse(); // Oldest to newest\r\n}", "import React from \"react\";\r\nimport { Link } from \"@remix-run/react\";\r\nimport { ethers } from \"ethers\";\r\nimport { MetricCard } from \"./MetricCard\";\r\nimport { TransactionChart } from \"./TransactionChart\";\r\nimport { BlockTimeChart } from \"./BlockTimeChart\";\r\nimport { NetworkStatus } from \"./NetworkStatus\";\r\nimport { ComparisonChart } from \"./ComparisonChart\";\r\nimport type { Block, Transaction, NetworkStats, ChainComparison } from \"~/lib/types\";\r\n\r\ninterface DashboardProps {\r\n  networkStats: NetworkStats;\r\n  recentBlocks: Block[];\r\n  recentTransactions: Transaction[];\r\n  chainComparisons: ChainComparison[];\r\n  blockTimeTrend: Array<{ blockNumber: number; blockTime: number }>;\r\n  txTrend: Array<{ blockNumber: number; transactionCount: number }>;\r\n}\r\n\r\nexport function Dashboard({\r\n  networkStats,\r\n  recentBlocks,\r\n  recentTransactions,\r\n  chainComparisons,\r\n  blockTimeTrend,\r\n  txTrend\r\n}: DashboardProps) {\r\n  // Format the value for better display\r\n  const formatEther = (wei: string) => {\r\n    try {\r\n      return parseFloat(ethers.formatEther(wei)).toFixed(6);\r\n    } catch {\r\n      return \"0\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-6\">\r\n      <header className=\"mb-8\">\r\n        <h1 className=\"text-3xl font-bold text-gray-800\">Monad Testnet Dashboard</h1>\r\n        <p className=\"text-gray-600\">Real-time analytics for the Monad Testnet</p>\r\n      </header>\r\n\r\n      {/* Key Metrics */}\r\n      <section className=\"mb-8\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Key Metrics</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          <MetricCard\r\n            title=\"TPS\"\r\n            value={networkStats.tps.toFixed(2)}\r\n            description=\"Transactions per second\"\r\n          />\r\n          <MetricCard\r\n            title=\"Block Time\"\r\n            value={`${networkStats.avgBlockTime.toFixed(2)}s`}\r\n            description=\"Average time between blocks\"\r\n          />\r\n          <MetricCard\r\n            title=\"Latest Block\"\r\n            value={networkStats.latestBlock.toLocaleString()}\r\n            description=\"Current blockchain height\"\r\n          />\r\n          <MetricCard\r\n            title=\"Gas Price\"\r\n            value={`${ethers.formatUnits(networkStats.gasPrice || \"0\", \"gwei\")} Gwei`}\r\n            description=\"Current gas price\"\r\n          />\r\n        </div>\r\n      </section>\r\n\r\n      {/* Charts */}\r\n      <section className=\"mb-8 grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <TransactionChart data={txTrend} />\r\n        <BlockTimeChart data={blockTimeTrend} />\r\n      </section>\r\n\r\n      {/* Network Status and Comparisons */}\r\n      <section className=\"mb-8 grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <NetworkStatus stats={networkStats} />\r\n        <ComparisonChart \r\n          data={chainComparisons} \r\n          metric=\"tps\" \r\n          title=\"TPS Comparison\" \r\n          color=\"#8884d8\" \r\n        />\r\n      </section>\r\n\r\n      <section className=\"mb-8\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Chain Comparisons</h2>\r\n        <div className=\"grid grid-cols-1 gap-6\">\r\n          <ComparisonChart \r\n            data={chainComparisons} \r\n            metric=\"blockTime\" \r\n            title=\"Block Time Comparison (seconds)\" \r\n            color=\"#82ca9d\" \r\n          />\r\n          <ComparisonChart \r\n            data={chainComparisons} \r\n            metric=\"finality\" \r\n            title=\"Finality Time Comparison (seconds)\" \r\n            color=\"#ffc658\" \r\n          />\r\n        </div>\r\n      </section>\r\n\r\n      {/* Recent Blocks & Transactions */}\r\n      <section className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        <div>\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h2 className=\"text-xl font-semibold\">Recent Blocks</h2>\r\n            <Link to=\"/blocks\" className=\"text-blue-500 hover:text-blue-700\">\r\n              View All \u2192\r\n            </Link>\r\n          </div>\r\n          <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Block</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Timestamp</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Txs</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Gas Used</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {recentBlocks.slice(0, 5).map((block) => (\r\n                  <tr key={block.hash} className=\"hover:bg-gray-50\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-500\">\r\n                      <Link to={`/blocks/${block.number}`}>\r\n                        {block.number}\r\n                      </Link>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                      {new Date(block.timestamp * 1000).toLocaleString()}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                      {block.transactions.length}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                      {ethers.formatUnits(block.gasUsed, \"gwei\")} Gwei\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h2 className=\"text-xl font-semibold\">Recent Transactions</h2>\r\n            <Link to=\"/transactions\" className=\"text-blue-500 hover:text-blue-700\">\r\n              View All \u2192\r\n            </Link>\r\n          </div>\r\n          <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tx Hash</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">From</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">To</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Value</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {recentTransactions.slice(0, 5).map((tx) => (\r\n                  <tr key={tx.hash} className=\"hover:bg-gray-50\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-500\">\r\n                      <Link to={`/transactions/${tx.hash}`}>\r\n                        {tx.hash.substring(0, 10)}...\r\n                      </Link>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                      {tx.from.substring(0, 8)}...\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                      {tx.to ? `${tx.to.substring(0, 8)}...` : 'Contract Creation'}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                      {formatEther(tx.value)} MON\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}", "import React from \"react\";\r\n\r\ninterface MetricCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  description?: string;\r\n  trend?: number; // Percentage change\r\n  icon?: React.ReactNode;\r\n}\r\n\r\nexport function MetricCard({ title, value, description, trend, icon }: MetricCardProps) {\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md p-6 flex flex-col\">\r\n      <div className=\"flex justify-between items-start mb-2\">\r\n        <h3 className=\"text-gray-500 text-sm font-medium\">{title}</h3>\r\n        {icon && <div className=\"text-blue-500\">{icon}</div>}\r\n      </div>\r\n      \r\n      <div className=\"flex items-baseline mt-1\">\r\n        <span className=\"text-2xl font-semibold text-gray-900\">{value}</span>\r\n        {trend !== undefined && (\r\n          <span className={`ml-2 text-sm font-medium ${trend >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n            {trend >= 0 ? '\u2191' : '\u2193'} {Math.abs(trend)}%\r\n          </span>\r\n        )}\r\n      </div>\r\n      \r\n      {description && <p className=\"text-gray-500 text-sm mt-1\">{description}</p>}\r\n    </div>\r\n  );\r\n}", "import React from \"react\";\r\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\ninterface TransactionChartProps {\r\n  data: Array<{\r\n    blockNumber: number;\r\n    transactionCount: number;\r\n  }>;\r\n}\r\n\r\nexport function TransactionChart({ data }: TransactionChartProps) {\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n      <h2 className=\"text-lg font-semibold mb-4\">Transaction Volume</h2>\r\n      <div className=\"h-64\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <AreaChart\r\n            data={data}\r\n            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis \r\n              dataKey=\"blockNumber\" \r\n              label={{ value: 'Block Number', position: 'insideBottomRight', offset: -10 }} \r\n            />\r\n            <YAxis \r\n              label={{ value: 'Transaction Count', angle: -90, position: 'insideLeft' }} \r\n            />\r\n            <Tooltip \r\n              formatter={(value) => [`${value} transactions`, 'Count']}\r\n              labelFormatter={(label) => `Block #${label}`}\r\n            />\r\n            <Area \r\n              type=\"monotone\" \r\n              dataKey=\"transactionCount\" \r\n              stroke=\"#8884d8\" \r\n              fill=\"#8884d8\" \r\n              fillOpacity={0.3} \r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}", "import React from \"react\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\ninterface BlockTimeChartProps {\r\n  data: Array<{\r\n    blockNumber: number;\r\n    blockTime: number;\r\n  }>;\r\n}\r\n\r\nexport function BlockTimeChart({ data }: BlockTimeChartProps) {\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n      <h2 className=\"text-lg font-semibold mb-4\">Block Time (seconds)</h2>\r\n      <div className=\"h-64\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <LineChart\r\n            data={data}\r\n            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis \r\n              dataKey=\"blockNumber\" \r\n              label={{ value: 'Block Number', position: 'insideBottomRight', offset: -10 }} \r\n            />\r\n            <YAxis \r\n              label={{ value: 'Block Time (s)', angle: -90, position: 'insideLeft' }} \r\n            />\r\n            <Tooltip \r\n              formatter={(value: number) => [`${value.toFixed(2)} seconds`, 'Block Time']}\r\n              labelFormatter={(label: number) => `Block #${label}`}\r\n            />\r\n            <Line \r\n              type=\"monotone\" \r\n              dataKey=\"blockTime\" \r\n              stroke=\"#82ca9d\" \r\n              strokeWidth={2}\r\n              dot={{ r: 3 }}\r\n              activeDot={{ r: 5 }}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}", "import React from \"react\";\r\nimport type { NetworkStats } from \"../lib/types\";\r\nimport { formatUnits } from \"ethers\";\r\n\r\ninterface NetworkStatusProps {\r\n  stats: NetworkStats;\r\n}\r\n\r\nexport function NetworkStatus({ stats }: NetworkStatusProps) {\r\n  // Calculate status based on network stats\r\n  const getStatus = () => {\r\n    // These thresholds are arbitrary and can be adjusted\r\n    if (stats.tps > 5000 && stats.avgBlockTime < 2) {\r\n      return { label: \"Excellent\", color: \"bg-green-500\" };\r\n    } else if (stats.tps > 1000 && stats.avgBlockTime < 5) {\r\n      return { label: \"Good\", color: \"bg-green-400\" };\r\n    } else if (stats.tps > 100 && stats.avgBlockTime < 10) {\r\n      return { label: \"Normal\", color: \"bg-yellow-400\" };\r\n    } else {\r\n      return { label: \"Degraded\", color: \"bg-red-500\" };\r\n    }\r\n  };\r\n\r\n  const status = getStatus();\r\n\r\n  // Format gas price safely\r\n  const formatGasPrice = (price: string) => {\r\n    try {\r\n      return `${formatUnits(price || \"0\", \"gwei\")} Gwei`;\r\n    } catch (error) {\r\n      return `${price || \"0\"} Gwei`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n      <h2 className=\"text-lg font-semibold mb-4\">Network Status</h2>\r\n      \r\n      <div className=\"flex items-center mb-4\">\r\n        <div className={`w-3 h-3 rounded-full ${status.color} mr-2`}></div>\r\n        <span className=\"font-medium\">{status.label}</span>\r\n      </div>\r\n      \r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        <div>\r\n          <p className=\"text-sm text-gray-500\">Latest Block</p>\r\n          <p className=\"font-medium\"># {stats.latestBlock.toLocaleString()}</p>\r\n        </div>\r\n        \r\n        <div>\r\n          <p className=\"text-sm text-gray-500\">TPS</p>\r\n          <p className=\"font-medium\">{stats.tps.toFixed(2)}</p>\r\n        </div>\r\n        \r\n        <div>\r\n          <p className=\"text-sm text-gray-500\">Block Time</p>\r\n          <p className=\"font-medium\">{stats.avgBlockTime.toFixed(2)}s</p>\r\n        </div>\r\n        \r\n        <div>\r\n          <p className=\"text-sm text-gray-500\">Gas Price</p>\r\n          <p className=\"font-medium\">{formatGasPrice(stats.gasPrice)}</p>\r\n        </div>\r\n        \r\n        <div>\r\n          <p className=\"text-sm text-gray-500\">Pending Txs</p>\r\n          <p className=\"font-medium\">{stats.pendingTxCount}</p>\r\n        </div>\r\n        \r\n        <div>\r\n          <p className=\"text-sm text-gray-500\">Nodes</p>\r\n          <p className=\"font-medium\">{stats.nodesCount}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}", "export default {'entry':{'module':'/build/entry.client-EDWB3VHI.js','imports':['/build/_shared/chunk-ZRM3C6E3.js','/build/_shared/chunk-QVPICV7U.js','/build/_shared/chunk-SAX64HLP.js','/build/_shared/chunk-5CTYPWPN.js','/build/_shared/chunk-JDDHJGUF.js','/build/_shared/chunk-ZLVDHCXD.js','/build/_shared/chunk-PONQPJE7.js','/build/_shared/chunk-AJAKA5UB.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-GDJ7NQVC.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-VCKFEUDO.js','imports':['/build/_shared/chunk-CZOLP6YT.js','/build/_shared/chunk-HHB33NJO.js','/build/_shared/chunk-IXQKNF5A.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/blocks':{'id':'routes/blocks','parentId':'root','path':'blocks','index':undefined,'caseSensitive':undefined,'module':'/build/routes/blocks-EVTIECF6.js','imports':['/build/_shared/chunk-C2EKPWZ6.js','/build/_shared/chunk-HHB33NJO.js','/build/_shared/chunk-IXQKNF5A.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/compare':{'id':'routes/compare','parentId':'root','path':'compare','index':undefined,'caseSensitive':undefined,'module':'/build/routes/compare-WT4DLEV3.js','imports':['/build/_shared/chunk-C2EKPWZ6.js','/build/_shared/chunk-CZOLP6YT.js','/build/_shared/chunk-IXQKNF5A.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/transactions':{'id':'routes/transactions','parentId':'root','path':'transactions','index':undefined,'caseSensitive':undefined,'module':'/build/routes/transactions-KD4OLV53.js','imports':['/build/_shared/chunk-C2EKPWZ6.js','/build/_shared/chunk-HHB33NJO.js','/build/_shared/chunk-IXQKNF5A.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'64d4718c','hmr':{'runtime':'/build/_shared\\\\chunk-SAX64HLP.js','timestamp':1746542144616},'url':'/build/manifest-64D4718C.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\Temuri\\\\Desktop\\\\cursorrepo\\\\MonadMetrics\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/transactions.tsx\";\nimport * as route2 from \"./routes/compare.tsx\";\nimport * as route3 from \"./routes/blocks.tsx\";\nimport * as route4 from \"./routes/_index.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":true,\"v3_relativeSplatPath\":true,\"v3_throwAbortReason\":true,\"v3_routeConfig\":false,\"v3_singleFetch\":true,\"v3_lazyRouteDiscovery\":true,\"unstable_optimizeDeps\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/transactions\": {\n      id: \"routes/transactions\",\n      parentId: \"root\",\n      path: \"transactions\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/compare\": {\n      id: \"routes/compare\",\n      parentId: \"root\",\n      path: \"compare\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/blocks\": {\n      id: \"routes/blocks\",\n      parentId: \"root\",\n      path: \"blocks\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "import_node", "import_react", "import_react", "import_ethers", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "loader", "loader", "import_node", "import_react", "import_react", "import_ethers", "import_jsx_dev_runtime", "loader", "loader", "import_node", "import_react", "import_react", "import_ethers", "import_jsx_dev_runtime", "import_recharts", "import_jsx_dev_runtime", "import_recharts", "import_jsx_dev_runtime", "import_ethers", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "loader"]
}
